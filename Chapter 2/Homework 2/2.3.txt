1.
    a.
        n=500
        E 2i-1
        i=1
            n=499    n=499
        2 * E i    - E 1
            i=1      i=1

        2 * 501(500)/2 - 500
        =250000
    b.
        n=10
        E 2^n
        i=1
        = 2 + 4 + 8 + 16 + 32 + 64 + 128 + 256 + 512 + 1024 = 2046

    c.
        n-1
    d.
        n+1         2
        E i     -   E i
        i=1         i=1

        (n+1)(n+2)/2 - 3

    e.
        n-1        -1
        E i(i+1) - E i(i+1)
        i=1        i=1

        n-1     n-1   -1      -1
        E i^2 + E i - E i^2 - E i
        i=1     i=1   i=1     i=1

        (n-1)(n)(2n-1)/6 + (n-1)(n)/2 - (-2)(-1)(-2-1)/6 - (-2)(-1)/2
        =(n-1)n(2n-1)/6 + n(n-1)/2
    f.
        n-1
        E 3^(j+1)
        j=0

        (1-3^(n))/(1-3)
        -(1-3^n)/2
    g.
        n     n
        E i * E j
        i=1   j=1
        n       n
        E 2in - E i
        i=1     i=1
           n
        2n*E i - (n)(n+1)/2
           i=1
        2n(n)(n+1)/2 - n(n+1)/2

        n^3 + n^2 - n(n+1)/2
    h
        n
        E 1/(i)(i+1)
        i=1

        n/(n+1)
2.
    a.
        n
        E i^4 + 2i^2 + 1
        i=1
        n       n        n
        E i^4 + E 2i^2 + E 1
        i=1     i=1      i=1
        n(n+1)(2n+1)(3n^2+3n-1)/30 + 2(n(n+1)(2n+1)/6) + n
        6n^5+15n^4+10n^3-n + (2n^3+3n^2+n)/3 + n
        O(n^5)+O(n^4)+O(n^3)-O(n)+O(n^3)+O(n^2)+O(n)+O(n)
        drop lower O
        O(n^5)
    b.
        n
        E lg i^2
        i=3

        n          1
        E lg i^2 - E lg i^2
        i=1        i=1

        n           1
        S lg(i^2) - S lg i^2
        1           1

        2x(ln(x)-1)/ln(10) - 0
        Simply:
        O(x(ln(x)))
    c.
        n
        E i2^(i-1) + 2^(i-1)
        i=1

        n            n
        E i2^(i-1) + E 2^(i-1)
        i=1          i=1

        n            n
        S i2^(i-1) + S 2^(i-1)
        1            1

        (ln(2)n-1)*2^(n-1) / ln^2 (2) + 2^(n-1)/ln(2)

        O(n2^n) + O(2^n)

        Simplify:
        O(n2^n)
    d.
        n   i
        E i E j
        i=1 j=1

        n
        E (i^3+i^2)/2
        i=1

            n           n
        1/2 E i^3 + 1/2 E i^2
            i=1         i

        n^2(n + 1)^2/4 + n(n+1)(2n+1)/12
        O(n^4) + O(n^3)
        Simplify:
        O(n^4)
5.
    a.
        it computes the distance between the biggest and smallest numbers in an array
    b.
        it's basic operation is the comparison
    c.
        this basic operation is being executed (n-2) times twice because of the two comparisons, making it 2(n-2) times (n-2 because the i starts at 1 and not 0)
    d.
        it's efficiency class is O(n) because it has to reloop through the array once.
    e.
        sorting the array would be the best course of action here. There are sorting algorithms such as the block sort that would be stable and in-place while giving an efficiency of nlogn in worst case and n in best case. After doing this, a simple calculation of a[n-1] - a[0] is needed to calculate the difference, essentially making the efficiency class go from an O(n^2) to a O(nlogn)


