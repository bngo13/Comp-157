3
    a
        (n^2)^10 = n^20 = O(n^20)
        (n^2 + 1) ^ 10 / n^20
        20n(n^2 + 1)^9 / 20n^19
        20 * (n^2 + 1)^8 * (19n^2 + 1) / 380n^18
        360n * (n^2 + 1)^7 * (19n^2 + 3) / 6840n^17
        360 * (n^2 + 1)^6 * (323n^4 + 102n^2 + 3) / 116280n^16
        5760n * (n^2+1)^5(323n^4+170n^2+15) / 1860480n^15
        86400 * (n^2+1)^4(323n^6+255n^4+45n^2+1) / 27907200n^14
        ...
        2432902008176640000 / 2432902008176640000 = 1

        1 > 0 so (n^2)^10 Ɛ Θ(n^20)

    b
        sqrt(10n^2 + 7n + 3) = sqrt(10n^2) = sqrt(n^2) = n
        O(n)

        (sqrt(10n^2 + 7n + 3) / n)'
        20x + 7 / 2sqrt(10x^2+7x+3)
        (20)(10x + 7x^1/2 + 3^1/2) / 20x + 7
        200x + 140x^1/2 + 60^1/2 / 20x + 7

        200 + 140x^(1/2)/x + 60^(1/2)/x / 20 + 7/x
        200 / 20
        10
        10 > 0 so sqrt(10n^2 + 7n + 3) Ɛ Θ(n)

    c
        2n lg(n+2)^2 + (n+2)^2 lg(n/2)

        nlog(n)^2 + n^2*lg(n)

        test if nlog(n)^2 grows slower than n^2*lg(n):
        nlg(n)^2 / n^2*lg(n)

        (ln(n)(ln(n)+2) / ln^2(10)) /  (2nln(n)+n) / ln(10)
        (ln(n)(ln(n)+2)) / (ln(10)(2nln(n)+n))
        ((2*ln(n)+2)/n) / (ln(10)(2*ln(n)+3))
        (2ln(n)+2) / nln(10)(2ln(n)+3)
        (2/n) / (2ln(10)nln(n) + 3ln(10)n)
        2 / (n(2ln(10)nln(n) + 3ln(10)n))
        2 / inf = 0

        Because equation results in a 0, growth of nlg(n)^2 must be lower than n^2*lg(n) so we use n^2*lg(n).

        O(n^2*lg(n))

        Proof:
        4nlg(n+2)/Ɛ Θ(nlg(n)) + (n+2)^2lg(n/2)/Ɛ Θ(n^2lg(n))
        since nlg(n) Ɛ O(n^2lg(n)), the growth is Θ(n^2lg(n))

        Θ(n^2lg(n)) Ɛ Θ(n^2lg(n))

    d
        2^n+1 + 3^n-1 = 2^n + 3^n = 3^n since it grows faster in the beginning

        O(3^n)

        3^n / 2^n+1 + 3^n-1
        3 * lim (3 / (2^(x+1) / 3^(x-1)) + 1)
        3 * 1/1 = 3

        Since 3, 2^n + 3^n Ɛ Θ(3^n)

    e
        floor takes O(1) since all you do is divide a number by 1.
        floor(log_2(n)) = log_2(n)
        O(log(n))

        Proof:
        log(n) / log_2(n)'
        (1 / ln(10)n) / (1 / ln(2)n)
        ln(2)n / ln(10)n
        ln(2) / ln(10)
        = >0

        Since greater than 0, log_2(n) Ɛ Θ(lg(n))
9
    a
        O(nlog(n)) + O(n) = drop the lower O() = O(nlog(n))
    b
        O(2n) = 2*O(n) = drop the constant O(n)
